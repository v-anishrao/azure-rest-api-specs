{
  "swagger": "2.0",
  "info": {
    "version": "2020-02-28-preview",
    "title": "industrydatalifecycle",
    "description": "Description of the new service",
    "x-ms-code-generation-settings": {
      "name": "industrydatalifecycleClient"
    }
  },
  "host": "management.azure.com",
  "schemes": [
    "https"
  ],
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "security": [
    {
      "azure_auth": [
        "user_impersonation"
      ]
    }
  ],
  "securityDefinitions": {
    "azure_auth": {
      "type": "oauth2",
      "authorizationUrl": "https://login.microsoftonline.com/common/oauth2/authorize",
      "flow": "implicit",
      "description": "Azure Active Directory OAuth2 Flow",
      "scopes": {
        "user_impersonation": "impersonate your user account"
      }
    }
  },
  "paths": {
    "/subscriptions/{subscriptionId}/providers/Microsoft.IndustryDataLifecycle/standardModels": {
      "get": {
        "tags": [
          "StandardModels"
        ],
        "operationId": "StandardModelGet",
        "x-ms-examples": {
          "BatchAccountDelete": {
            "$ref": "./examples/OperationGroupGet.json"
          }
        },
        "description": "Gets the list of all standard models.",
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Ok",
            "schema": {
              "$ref": "#/definitions/ModelList"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.IndustryDataLifecycle/standardModels/{modelId}": {
      "get": {
        "tags": [
          "StandardModels"
        ],
        "operationId": "StandardModelListGet",
        "x-ms-examples": {
          "BatchAccountDelete": {
            "$ref": "./examples/OperationGroupGet.json"
          }
        },
        "description": "This is a sample get operation, please see guidelines in azure-rest-api-specs repository for more info",
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ModelIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Ok",
            "schema": {
              "$ref": "#/definitions/GetModelResponse"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.IndustryDataLifecycle/organisationalModels": {
      "get": {
        "tags": [
          "OrganisationalModels"
        ],
        "operationId": "OrganisationalModelsListGet",
        "x-ms-examples": {
          "BatchAccountDelete": {
            "$ref": "./examples/OperationGroupGet.json"
          }
        },
        "description": "Gets the list of all standard models.",
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Ok",
            "schema": {
              "$ref": "#/definitions/ModelList"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.IndustryDataLifecycle/organisationalModels/{modelId}": {
      "get": {
        "tags": [
          "OrganisationalModels"
        ],
        "operationId": "OrganisationalModelGet",
        "x-ms-examples": {
          "BatchAccountDelete": {
            "$ref": "./examples/OperationGroupGet.json"
          }
        },
        "description": "This is a sample get operation, please see guidelines in azure-rest-api-specs repository for more info",
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ModelIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Ok",
            "schema": {
              "$ref": "#/definitions/GetModelResponse"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "put": {
        "tags": [
          "OrganisationalModels"
        ],
        "operationId": "OrganisationalModelPut",
        "x-ms-examples": {
          "BatchAccountDelete": {
            "$ref": "./examples/OperationGroupGet.json"
          }
        },
        "description": "This is a sample get operation, please see guidelines in azure-rest-api-specs repository for more info",
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ModelIdParameter"
          },
          {
            "$ref": "#/parameters/CreateModelRequestBody"
          }
        ],
        "responses": {
          "201": {
            "description": "Accepted",
            "schema": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "string"
                },
                "provisioningState": {
                  "type": "string",
                  "enum": [
                    "Creating"
                  ]
                },
                "properties": {
                  "$ref": "#/definitions/CreateModelRequest"
                }
              }
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "patch": {
        "tags": [
          "OrganisationalModels"
        ],
        "operationId": "OrganisationalModelPatch",
        "x-ms-examples": {
          "BatchAccountDelete": {
            "$ref": "./examples/OperationGroupGet.json"
          }
        },
        "description": "This is a sample get operation, please see guidelines in azure-rest-api-specs repository for more info",
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ModelIdParameter"
          },
          {
            "$ref": "#/parameters/PatchModelRequestBody"
          }
        ],
        "responses": {
          "200": {
            "description": "Ok",
            "schema": {
              "$ref": "#/definitions/GetModelResponse"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    }
  },
  "definitions": {
    "IndustryModel": {
      "type": "object",
      "description": "The industry model.",
      "properties": {
        "enitities": {
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "entityId": {
                "type": "string"
              },
              "entityName": {
                "type": "string"
              }
            }
          }
        },
        "relationships": {
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "fromEntityId": {
                "type": "string"
              },
              "fromAttribute": {
                "type": "string"
              },
              "toEntityId": {
                "type": "string"
              },
              "toAttribute": {
                "type": "string"
              }
            }
          }
        }
      }
    },
    "Entity": {
      "description": "An entity object",
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "attributes": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Attribute"
          }
        },
        "description": {
          "type": "string"
        }
      }
    },
    "Attribute": {
      "description": "An attribute of the entity",
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "datatype": {
          "type": "string"
        },
        "description": {
          "type": "string"
        }
      }
    },
    "EntityList": {
      "type": "object",
      "properties": {
        "nextLink": {
          "type": "string"
        },
        "value": {
          "$ref": "#/definitions/Entity"
        }
      }
    },
    "ModelList": {
      "type": "object",
      "properties": {
        "nextLink": {
          "type": "string"
        },
        "value": {
          "$ref": "#/definitions/GetModelResponse"
        }
      }
    },
    "GetModelResponse": {
      "description": "The GET model response",
      "properties": {
        "id": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "type": {
          "type": "string"
        },
        "tags": {
          "type": "object"
        },
        "properties": {
          "$ref": "#/definitions/IndustryModel"
        }
      }
    },
    "ErrorResponse": {
      "description": "Error response.",
      "properties": {
        "error": {
          "$ref": "#/definitions/ErrorDefinition",
          "description": "The error details."
        }
      }
    },
    "ErrorDefinition": {
      "description": "Error definition.",
      "properties": {
        "code": {
          "description": "Service specific error code which serves as the substatus for the HTTP error code.",
          "type": "string",
          "readOnly": true
        },
        "message": {
          "description": "Description of the error.",
          "type": "string",
          "readOnly": true
        },
        "details": {
          "description": "Internal error details.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ErrorDefinition"
          },
          "readOnly": true
        }
      }
    },
    "DirectiveConfiguration": {
      "type": "object",
      "properties": {
        "entities": {
          "type": "object",
          "properties": {
            "type": {
              "type": "string",
              "enum": [
                "Include",
                "Exclude"
              ]
            },
            "list": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "entityReference": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "customize": {
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "entityReference": {
                "type": "string"
              },
              "entityName": {
                "type": "string"
              },
              "attributeInclusionType": {
                "type": "string",
                "enum": [
                  "Include",
                  "Exclude"
                ]
              },
              "attributes": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "reference": {
                      "type": "string"
                    }
                  }
                }
              },
              "attributeGroups": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "reference": {
                      "type": "string"
                    }
                  }
                }
              },
              "relationship": {
                "type": "object",
                "properties": {
                  "type": {
                    "type": "string",
                    "enum": [
                      "Denormalization",
                      "Aggregation"
                    ]
                  },
                  "pairs": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "source": {
                          "type": "object",
                          "properties": {
                            "entityReference": {
                              "type": "string"
                            },
                            "multiplicity": {
                              "type": "string"
                            }
                          }
                        },
                        "target": {
                          "type": "object",
                          "properties": {
                            "entityReference": {
                              "type": "string"
                            },
                            "multiplicity": {
                              "type": "string"
                            }
                          }
                        },
                        "joinPairs": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "sourceAttribute": {
                                "type": "string"
                              },
                              "targetAttribute": {
                                "type": "string"
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "Directive": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "version": {
          "type": "string"
        },
        "configuration": {
          "$ref": "#/definitions/DirectiveConfiguration"
        }
      }
    },
    "CreateModelRequest": {
      "properties": {
        "location": {
          "type": "string"
        },
        "tags": {
          "type": "object"
        },
        "properties": {
          "$ref": "#/definitions/Directive"
        }
      }
    }
  },
  "parameters": {
    "CreateModelRequestBody": {
      "name": "requestBody",
      "description": "Request body used to create the organisational model.",
      "in": "body",
      "schema": {
        "$ref": "#/definitions/CreateModelRequest"
      }
    },
    "PatchModelRequestBody": {
      "name": "requestBody",
      "description": "Request body used to patch the organisational model.",
      "in": "body",
      "schema": {
        "type": "object",
        "properties": {
          "tags": {
            "type": "object"
          }
        }
      }
    },
    "SubscriptionIdParameter": {
      "name": "subscriptionId",
      "in": "path",
      "required": true,
      "type": "string",
      "description": "The Azure subscription ID. This is a GUID-formatted string (e.g. 00000000-0000-0000-0000-000000000000)"
    },
    "ResourceGroupNameParameter": {
      "name": "resourceGroupName",
      "in": "path",
      "required": true,
      "type": "string",
      "description": "The name of the resource group.",
      "x-ms-parameter-location": "method"
    },
    "ApiVersionParameter": {
      "name": "api-version",
      "in": "query",
      "required": true,
      "type": "string",
      "description": "The API version to be used with the HTTP request."
    },
    "ModelIdParameter": {
      "name": "modelId",
      "in": "path",
      "required": true,
      "type": "string",
      "description": "The model id which is unique under the given scope."
    }
  }
}